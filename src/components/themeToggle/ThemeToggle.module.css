/* Theme toggle container 
 * @class theme 
 * @property {string} position - Relative positioning for alignment
 * @property {string} display - Inline-flex for horizontal layout
 * @property {string} align-self - Center the container vertically
 * @property {string} cursor - Pointer to indicate interactivity
 * @property {string} -webkit-tap-highlight-color - Remove highlight on tap
 */
.theme {
    position: relative;
    display: inline-flex;
    align-self: center;
    cursor: pointer;
    -webkit-tap-highlight-color: transparent;
}

/* Container for theme toggle
 * @class theme-toggle-container 
 * @property {string} position - Relative positioning for alignment
 * @property {string} display - Inline-flex for horizontal layout
 * @property {string} align-items - Center alignment for toggle elements
 * @property {string} cursor - Pointer to indicate interactivity
 */
.theme-toggle-container {
    position: relative;
    display: inline-flex;
    align-items: center;
    cursor: pointer;
}

/* Theme toggle button
 * @class theme-toggle 
 * @property {string} position - Absolute for overlay on other elements
 * @property {string} pointer-events - Enables clicking on the element
 * @property {string} width/height - Set button size
 * @property {string} cursor - Pointer to indicate interactivity
 */
.theme-toggle {
    position: absolute;
    pointer-events: pointer;
    width: 2.5em;
    height: 2.5em;
    cursor: pointer;
}

/* Icon for theme representation (sun/moon)
 * @class theme-icon 
 * @property {string} pointer-events - Disabled to prevent click events
 * @property {string} transition - Smooth transform effect
 */
.theme-icon {
    pointer-events: none;
    transition: transform 0.2s ease-in-out;
}

/* Set z-index for theme toggle and icon
 * @class theme-icon, theme-toggle
 * @property {number} z-index - Stack above other elements
 */
.theme-icon,
.theme-toggle {
    z-index: 1;
}

/* Position the icon and icon parts
 * @class theme-icon, theme-icon-part
 * @property {string} position - Absolute positioning
 */
.theme-icon,
.theme-icon-part {
    position: absolute;
}

/* Main theme icon styling
 * @class theme-icon 
 * @property {string} display - Block level for consistent rendering
 * @property {number} margin-top/left - Position adjustments for alignment
 * @property {string} width/height - Set icon size
 */
.theme-icon {
    display: block;
    margin-top: 0.6em;
    margin-left: 1.25em;
    width: 0.5em;
    height: 1.5em;
}

/* Sun rays or moon styling parts
 * @class theme-icon-part 
 * @property {string} border-radius - Full to make a circle
 * @property {string} box-shadow - Inner shadow for sun or moon effect
 * @property {string} position - Placement within the icon
 * @property {string} transition - Smooth transitions on various properties
 * @property {string} transform - Scale down for effect
 */
.theme-icon-part {
    border-radius: 50%;
    box-shadow: 0.4em -0.4em 0 0.5em var(--icon-light) inset;
    top: calc(50% - 0.5em);
    left: calc(50% - 0.5em);
    width: 1em;
    height: 1em;
    transition: box-shadow 0.2s ease-in-out,
        opacity 0.2s ease-in-out,
        transform 0.2s ease-in-out;
    transform: scale(0.5);
}

/* Additional icon parts for sun rays
 * @class theme-icon-part~.theme-icon-part 
 * @property {string} background-color - Sun ray color
 * @property {string} border-radius - Slight rounding for rectangular rays
 * @property {string} transform - Position adjustments for rotation
 */
.theme-icon-part~.theme-icon-part {
    background-color: var(--icon-light);
    border-radius: 0.05em;
    box-shadow: none;
    top: 50%;
    left: calc(50% - 0.05em);
    transform: rotate(0) translateY(0.5em);
    transform-origin: 50% 0;
    width: 0.1em;
    height: 0.2em;
}

/* Rotating rays to create sun effect
 * @class theme-icon-part:nth-child(n) 
 * @property {string} transform - Rotate rays around the center
 */
.theme-icon-part:nth-child(3) {
    transform: rotate(45deg) translateY(0.5em);
}

.theme-icon-part:nth-child(4) {
    transform: rotate(90deg) translateY(0.5em);
}

.theme-icon-part:nth-child(5) {
    transform: rotate(135deg) translateY(0.5em);
}

.theme-icon-part:nth-child(6) {
    transform: rotate(180deg) translateY(0.5em);
}

.theme-icon-part:nth-child(7) {
    transform: rotate(225deg) translateY(0.5em);
}

.theme-icon-part:nth-child(8) {
    transform: rotate(270deg) translateY(0.5em);
}

.theme-icon-part:nth-child(9) {
    transform: rotate(315deg) translateY(0.5em);
}

/* Common styling for label, toggle, and wrapper 
 * @class theme-label, theme-toggle, theme-wrap
 * @property {string} position - Relative positioning for consistent placement
 */
.theme-label,
.theme-toggle,
.theme-wrap {
    position: relative;
}

/* Display toggle button and pseudo-element 
 * @class theme-toggle, theme-toggle::before 
 * @property {string} display - Block for element consistency
 */
.theme-toggle,
.theme-toggle::before {
    display: block;
}

/* Toggle button with styling for light mode
 * @class theme-toggle 
 * @property {string} background-color - Light theme background
 * @property {string} border-radius - Rounded shape for visual appearance
 * @property {string} transition - Smooth changes on state toggle
 */
.theme-toggle {
    background-color: var(--toggle-bg-light);
    border-radius: 25% / 50%;
    padding: 0.25em;
    width: 6em;
    height: 3em;
    appearance: none;
    cursor: pointer;
    transition: background-color 0.3s ease-in-out,
        box-shadow 0.15s ease-in-out,
        transform 0.2s ease-in-out;
}

/* Inner button for toggle switch 
 * @class theme-toggle::before
 * @property {string} background-color - Light theme button
 * @property {string} border-radius - Full circle shape
 * @property {string} transition - Smooth transform when toggled
 */
.theme-toggle::before {
    background-color: var(--toggle-btn-light);
    border-radius: 50%;
    content: '';
    width: 2.5em;
    height: 2.5em;
    transition: background-color 0.3s ease-in-out,
        transform 0.3s ease-in-out;
}

/* Remove outline when toggle button is focused 
 * @class theme-toggle:focus
 * @property {string} outline - Transparent to avoid default outline
 */
.theme-toggle:focus {
    outline: transparent;
}

/* Toggle button in dark mode 
 * @class theme-toggle:checked 
 * @property {string} background-color - Dark theme background color
 */
.theme-toggle:checked {
    background-color: var(--toggle-bg-dark);
}

/* Change toggle button color in dark mode
 * @class theme-toggle:checked::before
 * @property {string} background-color - Dark theme button color
 */
.theme-toggle:checked::before {
    background-color: var(--toggle-btn-dark);
}

/* Transform elements when toggle is checked 
 * @class theme-toggle:checked::before, theme-toggle:checked~.theme-icon
 * @property {string} transform - Move the button and icon to dark mode position
 */
.theme-toggle:checked::before,
.theme-toggle:checked~.theme-icon {
    transform: translateX(3em);
}

/* Styling moon representation in dark mode
 * @class theme-toggle:checked~.theme-icon .theme-icon-part:nth-child(1)
 * @property {string} box-shadow - Dark inset for moon look
 * @property {string} transform - Scaling to full size
 * @property {string} left - Adjust position to create moon shape
 */
.theme-toggle:checked~.theme-icon .theme-icon-part:nth-child(1) {
    box-shadow: 0.2em -0.2em 0 0.2em var(--icon-dark) inset;
    transform: scale(1);
    left: -0.7em;
}

/* Hide sun rays in dark mode
 * @class theme-toggle:checked~.theme-icon .theme-icon-part~.theme-icon-part
 * @property {string} opacity - Set to 0 to hide rays
 */
.theme-toggle:checked~.theme-icon .theme-icon-part~.theme-icon-part {
    opacity: 0;
}

/* Adjust moon crater positions in dark mode
 * @class theme-toggle:checked~.theme-icon .theme-icon-part:nth-child(n)
 * @property {string} transform - Reposition for moon's craters
 */
.theme-toggle:checked~.theme-icon .theme-icon-part:nth-child(2) {
    transform: rotate(45deg) translateY(0.8em);
}

.theme-toggle:checked~.theme-icon .theme-icon-part:nth-child(3) {
    transform: rotate(90deg) translateY(0.8em);
}

.theme-toggle:checked~.theme-icon .theme-icon-part:nth-child(4) {
    transform: rotate(135deg) translateY(0.8em);
}

.theme-toggle:checked~.theme-icon .theme-icon-part:nth-child(5) {
    transform: rotate(180deg) translateY(0.8em);
}

.theme-toggle:checked~.theme-icon .theme-icon-part:nth-child(6) {
    transform: rotate(225deg) translateY(0.8em);
}

.theme-toggle:checked~.theme-icon .theme-icon-part:nth-child(7) {
    transform: rotate(270deg) translateY(0.8em);
}

.theme-toggle:checked~.theme-icon .theme-icon-part:nth-child(8) {
    transform: rotate(315deg) translateY(0.8em);
}

.theme-toggle:checked~.theme-icon .theme-icon-part:nth-child(9) {
    transform: rotate(360deg) translateY(0.8em);
}

/* Toggle wrapper styling 
 * @class theme-toggle-wrap 
 * @property {string} margin - Spacing around toggle for layout adjustment
 */
.theme-toggle-wrap {
    margin: 0 0.75em;
}